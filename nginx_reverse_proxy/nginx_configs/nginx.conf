user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  # Global configurations for all server directives
  server_tokens off;
  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" "$http_x_forwarded_proto" "$host"';

  access_log  /var/log/nginx/access.log  main;
  sendfile        on;
  keepalive_timeout  65;
  #include /etc/nginx/conf.d/*.conf; # Default configuration in here isn't required.

  # Port 80
  server {
    listen 80;
    server_name portal;

    if ($http_x_forwarded_proto != 'https') {
      return 301 https://$host$request_uri;
    }
  }

  # Port 443
  server {
    listen 443 ssl;
    server_name portal;

    # server certificates
    ssl_certificate /certs/server.crt;
    ssl_certificate_key /certs/server.key;
    ssl_protocols TLSv1.2;

    # client certificates
    ssl_client_certificate /certs/ca/ca.crt;
    ssl_verify_client optional; # Used to set the variable for the below 403

    # Global configurations for this server directives sites-enabled
    proxy_read_timeout      300;
    proxy_connect_timeout   300;
    proxy_redirect          off;
    proxy_set_header    Host                $http_host;
    proxy_set_header    X-Real-IP           $remote_addr;
    proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-Proto   $scheme;

    # Default rule meaning any site for this server directive also has to be SSL verified before moving on to the available sites in the below include.
    if ($ssl_client_verify != SUCCESS) {
     return 403;
    }

    include /etc/nginx/sites-enabled/*.conf;
  }
}
